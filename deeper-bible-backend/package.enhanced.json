{
  "name": "deeper-bible-backend-enhanced",
  "version": "1.1.0",
  "description": "Enhanced Redis caching layer for Deeper Bible application with security, monitoring, and reliability features",
  "main": "dist/index.js",
  "scripts": {
    "start": "node dist/index.js",
    "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
    "dev:enhanced": "ts-node-dev --respawn --transpile-only src/index.enhanced.ts",
    "build": "tsc",
    "test": "jest",
    "test:unit": "jest --testPathIgnorePatterns=integration",
    "test:integration": "jest --testPathPattern=integration",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:fixed": "jest --testPathPattern=fixed",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f redis",
    "docker:restart": "docker-compose restart redis",
    "performance:test": "npm run test:integration -- --testNamePattern=\"Performance\"",
    "security:audit": "npm audit && npm run lint",
    "cache:warm": "curl -X POST http://localhost:3000/api/cache/warm -H \"Content-Type: application/json\" -d '{\"type\":\"bible\",\"data\":{\"book\":\"Genesis\",\"translation\":\"KJV\",\"chapters\":[]}}'",
    "cache:invalidate": "curl -X POST http://localhost:3000/api/cache/invalidate -H \"Content-Type: application/json\" -d '{\"pattern\":\"*\"}'",
    "health:check": "curl http://localhost:3000/health | jq",
    "metrics:view": "curl http://localhost:3000/metrics | jq"
  },
  "keywords": [
    "redis",
    "cache",
    "bible",
    "typescript",
    "nodejs",
    "express",
    "monitoring",
    "circuit-breaker",
    "rate-limiting"
  ],
  "author": "Deeper Bible Team",
  "license": "MIT",
  "type": "commonjs",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@types/express": "^5.0.3",
    "@types/node": "^24.2.1",
    "compression": "^1.8.1",
    "express": "^5.1.0",
    "ioredis": "^5.7.0",
    "redis": "^5.8.1",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.9.2"
  },
  "devDependencies": {
    "@types/compression": "^1.7.5",
    "@types/jest": "^30.0.0",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "eslint": "^8.57.0",
    "jest": "^30.0.5",
    "redis-mock": "^0.56.3",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src"],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/**/*.test.ts",
      "!src/**/*.spec.ts",
      "!src/tests/**/*"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "eslintConfig": {
    "extends": [
      "@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint"],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/explicit-function-return-type": "off"
    }
  }
}